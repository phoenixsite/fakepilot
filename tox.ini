[tox]
requires =
    tox>=4
env_list =
    py{39,310,311,312,313}-{test,no_lxml}
    coverage_report
    docs_build
    docstrings
    spellcheck
    black
    isort
    bandit
    pylint
    flake8
    build
    description
    manifest
    pyroma
    wheel


[testenv]
description = Run unit tests
deps =
     coverage
     tomli; python_full_version < "3.11.0a7"
     lxml
commands = coverage run --source fakepilot -m unittest discover
labels = tests


[testenv:py{39,310,311,312,313}-no_lxml]
description = Run unit tests without the lxml parser
commands = python -m unittest discover
labels = tests


[testenv:coverage_report]
description = [run locally after tests]: combine coverage data and create report;
skip_install = true
deps =
    coverage[toml]
commands =
    coverage combine
    coverage report --show-missing
    coverage erase
depends =  py39, py310, py311, py312, py313
labels = report


[testenv:docs_build]
basepython = py312
description = Build the documentation
deps =
    -r docs/requirements.txt
labels = docs
commands = python -Im sphinx -W --builder html --write-all -c docs --doctree-dir {temp_dir}/doctrees docs {temp_dir}/html


[testenv:docstrings]
basepython = py312
description = Enforce the presence of docstrings on all modules, classes, functions and methods
skip_install = true
deps = interrogate
labels = docs
commands = interrogate -v src tests


[testenv:spellcheck]
basepython = py312
description = Spell-check the package s documentation
setenv =
    PYENCHANT_LIBRARY_PATH = {env:PYENCHANT_LIBRARY_PATH:}
deps =
    -r docs/requirements.txt
    pyenchant
    sphinxcontrib-spelling
labels = docs
commands = python -Im sphinx -W --builder spelling -c docs --doctree-dir {temp_dir}/doctrees docs {temp_dir}/html


[testenv:black]
basepython = py313
description = Code formatting with black
deps = black>=24.0,<25.0
skip_install = true
labels = formatters
commands = black --check --diff src/ tests/ docs/


[testenv:isort]
basepython = py313
description = Check import order with isort
deps = isort
skip_install = true
labels = formatters
commands = isort --check-only --diff src/ tests/ docs/


[testenv:bandit]
basepython = py313
description = Lint code with bandit
skip_install = true
deps = bandit
labels = linters
commands = bandit -c pyproject.toml -r src tests


[testenv:pylint]
basepython = py313
description = Lint code with Pylint
deps = pylint
labels = linters
commands = pylint src tests


[testenv:flake8]
basepython = py313
skip_install = true
deps =
    flake8
    flake8-bugbear
labels = linters
commands = flake8 src/ tests/ docs/


[testenv:build]
basepython = py313
skip_install = true
description = Check that the package builds
deps = build
labels = packaging
commands = python -Im build

[testenv:description]
basepython = py313
skip_install = true
description = Check that the package description will render on the Python Package Index
deps =
    build
    twine
labels = packaging
commands =
    python -Im build --wheel --outdir {temp_dir}/build
    python -Im twine check {temp_dir}/build/*


[testenv:manifest]
basepython = py313
skip_install = true
description = Check that the set of files in the package matches the set under version control
deps = check-manifest
labels = check_manifest
commands = check-manifest --verbose


[testenv:pyroma]
basepython = py313
skip_install = true
description = Check package quality with pyroma
deps = pyroma
labels = packaging
commands = pyroma .


[testenv:wheel]
basepython = py313
skip_install = true
description = Check the built wheel package for common errors
deps =
    build
    check-wheel-contents
labels = packaging
commands =
    python -Im build --wheel --outdir {temp_dir}/build
    python -Im check_wheel_contents {temp_dir}/build
